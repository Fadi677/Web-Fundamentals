-Query: Create 6 new users

INSERT INTO users (first_name,last_name) VALUES ("jadon","sinn"); 
INSERT INTO users (first_name,last_name) VALUES ("max","lee");
INSERT INTO users (first_name,last_name) VALUES ("zed","feed");
INSERT INTO users (first_name,last_name) VALUES ("rammus","turt");
INSERT INTO users (first_name,last_name) VALUES ("ziggie","mage");
INSERT INTO users (first_name,last_name) VALUES ("zyra","plan");


-NINJA Query: Return all users who are friends with the first user, make sure their names are displayed in results.

select friends.id, friends.first_name, friends.last_name, users.id, users.first_name, users.last_name from users
join friendships on users.id=friendships.user_id 
join users as friends on friendships.friend_id=friends.id
where users.id=1;


-NINJA Query: Return the count of all friendships

SELECT count(friendships.id) FROM friendships;


select count(friends.id), users.first_name, users.last_name from users
join friendships on users.id=friendships.user_id 
join users as friends on friendships.friend_id=friends.id group by users.first_name;


-NINJA Query: Find out who has the most friends and return the count of their friends.
select max(friends_count), name from( select count(friends.id) as friends_count, users.first_name as name, users.last_name from users
join friendships on users.id=friendships.user_id 
join users as friends on friendships.friend_id=friends.id group by users.first_name) as subtable;

-NINJA Query: Return the friends of the third user in alphabetical order.
select friends.id, friends.first_name, friends.last_name, users.id, users.first_name, users.last_name from users
join friendships on users.id=friendships.user_id 
join users as friends on friendships.friend_id=friends.id
where users.id=3 order by "first_name" asc; 